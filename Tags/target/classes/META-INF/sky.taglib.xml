<?xml version="1.0" encoding="UTF-8"?>

<facelet-taglib xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd" version="2.0" id="sky">
    <namespace>http://skywox.co.id/tags</namespace>
    <tag>
        <tag-name>inputDecimal</tag-name>
        <component>
            <description>@author ricko</description>
            <component-type>com.skyworx.tags.InputDecimal</component-type>
            <renderer-type>com.skyworx.InputDecimalRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon/>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onblur</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>inputDecimal4</tag-name>
        <component>
            <description>@author ricko</description>
            <component-type>javax.faces.Input</component-type>
            <renderer-type>com.skyworx.InputDecimalRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon/>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon/>
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the converter message, replacing any message that comes from the converter.</description>
            <display-name>Converter Message</display-name>
            <icon/>
            <name>converterMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.</description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating that the user is required to provide a submitted value for this input component.</description>
            <display-name>Required Flag</display-name>
            <icon/>
            <name>required</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validation message for the "required" facility, if the "required" facility is used.</description>
            <display-name>Required Message</display-name>
            <icon/>
            <name>requiredMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.</description>
            <display-name>Validator</display-name>
            <icon/>
            <name>validator</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validator message, replacing any message that comes from the validator.</description>
            <display-name>Validator Message</display-name>
            <icon/>
            <name>validatorMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon/>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing what the new value is, but this can be useful in cases where a notification is needed that "this value changed".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Value Change Listener</display-name>
            <icon/>
            <name>valueChangeListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
    </tag>
</facelet-taglib>
